{"ast":null,"code":"var _jsxFileName = \"/Users/ulyanaeskova/mathbattlefront/src/components/coursecmp/messages/messages.js\";\nimport React from 'react';\nimport './messages.css';\nimport line from \"./images/line.svg\";\nimport upload from \"./images/icons/upload.svg\";\nimport emodgi from './images/icons/emodgi.png';\nimport microphone from \"./images/icons/microphone.svg\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nconst client = new W3CWebSocket('ws://127.0.0.1:3000/ws');\n\nclass Message extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messages__message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messages__message__info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"messages__message__name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, this.props.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"messages__message__time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, this.props.time)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"messages__message__text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, this.props.text));\n  }\n\n}\n\nclass Messages extends React.Component {\n  componentWillMount() {\n    client.onopen = () => {\n      client.send(\"Hi\");\n      console.log('WebSocket Client Connected');\n    };\n\n    client.onmessage = message => {\n      console.log(message);\n    };\n  }\n\n  render() {\n    var messages = [{\n      name: \"Иван Подворный\",\n      time: \"12:41 AM\",\n      text: \"Мы сортируем все дома - идём от максимального по заражённости - если мы заняли весь округ то соединмяем и прибавляем разницу\"\n    }];\n    messages = messages.concat([{\n      name: \"Алексей Маренков\",\n      time: \"17:09 PM\",\n      text: \"Ваня, а можешьд дать идею как такое решить? Прост я подумал, что давайте мы для каждого округа и дома подсчитаем насколько мы хотим к ним поставить наблюдателя - но в итоге получился тест 5 2 3\"\n    }]);\n    messages = messages.concat(messages);\n    messages = messages.concat(messages);\n    messages = messages.concat(messages);\n    messages = messages.concat(messages);\n    messages = messages.concat(messages);\n    var items = [];\n\n    for (const [index, value] of messages.entries()) {\n      items.push( /*#__PURE__*/React.createElement(Message, {\n        name: value.name,\n        time: value.time,\n        text: value.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 20\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messages__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messages__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"messages__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, \"# \\u0425\\u0438\\u0442\\u0440\\u044B\\u0439 \\u043A\\u043E\\u0442\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messages__header__right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"messages__header__right__text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u0435\\u043D 20 \\u043C\\u0438\\u043D\\u0443\\u0442\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"messages__line\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messages__block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messages__content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messages__content__bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messages__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"messages__line\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }), items)))), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"new_message__form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"new_message__line\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: upload,\n      className: \"new_message__icons_upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: emodgi,\n      className: \"new_message__icons_emodgi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: microphone,\n      className: \"new_message__icons_microphone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"new_message__input_div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"new_message__input\",\n      placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u0432 # \\u0425\\u0438\\u0442\\u0440\\u044B\\u0439 \\u043B\\u0438\\u0441\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }))));\n  }\n\n}\n\nexport default Messages;","map":{"version":3,"sources":["/Users/ulyanaeskova/mathbattlefront/src/components/coursecmp/messages/messages.js"],"names":["React","emodgi","w3cwebsocket","W3CWebSocket","client","Message","Component","render","props","name","time","text","Messages","componentWillMount","onopen","send","console","log","onmessage","message","messages","concat","items","index","value","entries","push","upload","microphone"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './messages.css'\nimport line from './images/line.svg'\nimport upload from './images/icons/upload.svg'\nimport emodgi from './images/icons/emodgi.png'\nimport microphone from './images/icons/microphone.svg'\n\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nconst client = new W3CWebSocket('ws://127.0.0.1:3000/ws');\n\nclass Message extends React.Component {\n    render() {\n      return (\n        <div className=\"messages__message\">\n            <div className=\"messages__message__info\">\n                <p className=\"messages__message__name\">{this.props.name}</p>\n                <p className=\"messages__message__time\">{this.props.time}</p>\n            </div>\n            <p className=\"messages__message__text\">{this.props.text}</p>\n\n        </div>\n      );\n    }\n}\n\n\nclass Messages extends React.Component {\n    componentWillMount() {\n        client.onopen = () => {\n          client.send(\"Hi\");\n          console.log('WebSocket Client Connected');\n        };\n        client.onmessage = (message) => {\n\n          console.log(message);\n        };\n      }\n    render() {\n      var messages = [{name : \"Иван Подворный\", time : \"12:41 AM\", text: \"Мы сортируем все дома - идём от максимального по заражённости - если мы заняли весь округ то соединмяем и прибавляем разницу\"}]\n      messages = messages.concat([{name : \"Алексей Маренков\", time: \"17:09 PM\", text : \"Ваня, а можешьд дать идею как такое решить? Прост я подумал, что давайте мы для каждого округа и дома подсчитаем насколько мы хотим к ним поставить наблюдателя - но в итоге получился тест 5 2 3\"}])\n      messages = messages.concat(messages)\n      messages = messages.concat(messages)\n      messages = messages.concat(messages)\n      messages = messages.concat(messages)\n      messages = messages.concat(messages)\n      var items = [];\n      for (const [index, value] of messages.entries()) {\n        items.push(<Message name={value.name} time={value.time} text={value.text}/>)\n      }\n      return (\n        <div>\n            <div className=\"messages\">\n                <div className=\"messages__container\">\n                    <div className=\"messages__header\">\n                        <h2 className=\"messages__title\"># Хитрый кот</h2>\n                        <div className=\"messages__header__right\">\n                            <p className=\"messages__header__right__text\">Активен 20 минут</p>\n                        </div>\n                    </div>\n                    <hr className=\"messages__line\" alt=\"\"/>\n\n                </div>\n\n            </div>\n            <div className=\"messages__block\">\n                <div className=\"messages__content\">\n                    <div className=\"messages__content__bottom\">\n                        <div className=\"messages__container\">\n                            <hr className=\"messages__line\" alt=\"\"/>\n                            {items}\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n            <form className=\"new_message__form\">\n              <hr className=\"new_message__line\" alt=\"\"/>\n              <img src={upload} className=\"new_message__icons_upload\"/>\n              <img src={emodgi} className=\"new_message__icons_emodgi\"/>\n              <img src={microphone} className=\"new_message__icons_microphone\"/>\n              <div className=\"new_message__input_div\">\n                  <input type=\"text\" className=\"new_message__input\" placeholder=\"Написать в # Хитрый лис\"/>\n              </div>\n            </form>\n        </div>\n      );\n    }\n}\n\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}